import { APP_GUARD } from '@nestjs/core';
import { AppController } from './app.controller';
import { AppService } from './app.service';
import { AuthModule } from './modules/auth/auth.module';
import { ConfigModule, ConfigType } from '@nestjs/config';
import { dbConfig, jwtConfig, jwtRefreshConfig } from './common/configs';
import { JwtAuthGuard } from './modules/auth/guards/jwt-auth/jwt-auth.guard';
import { Module } from '@nestjs/common';
import { MongooseModule } from '@nestjs/mongoose';
import { TasksModule } from './modules/tasks/tasks.module';
import { UsersModule } from './modules/users/users.module';

@Module({
    imports: [
        // üîê M√≥dulo de autentica√ß√£o, respons√°vel por login e controle de acesso
        AuthModule,

        // üë§ M√≥dulo de usu√°rios, gerencia opera√ß√µes como cria√ß√£o e atualiza√ß√£o de perfis
        UsersModule,

        // ‚úÖ M√≥dulo de tarefas, usado para criar, listar e gerenciar atividades
        TasksModule,

        // ‚öôÔ∏è Configura√ß√£o global do ambiente com vari√°veis do arquivo .env.local
        ConfigModule.forRoot({
            envFilePath: ['.env.local'], // üìÇ Arquivo de vari√°veis de ambiente
            isGlobal: true, // üåé Torna acess√≠vel em toda a aplica√ß√£o
            load: [dbConfig, jwtConfig, jwtRefreshConfig], // ‚ö°Ô∏è Carrega configura√ß√µes do banco, JWT e refresh token
        }),

        // üõ¢Ô∏è Configura√ß√£o ass√≠ncrona do banco de dados usando Mongoose (MongoDB)
        MongooseModule.forRootAsync({
            inject: [dbConfig.KEY], // üîë Injeta chave de configura√ß√£o do banco de dados
            useFactory: (dbConfigKey: ConfigType<typeof dbConfig>) => ({
                uri: dbConfigKey.uri, // üåê Define a URL do banco de dados
            }),
        }),
    ],

    controllers: [
        // üéÆ Controlador principal da aplica√ß√£o, gerencia as rotas e l√≥gica principal
        AppController,
    ],

    providers: [
        // ‚öôÔ∏è Servi√ßo principal da aplica√ß√£o, respons√°vel por l√≥gica de neg√≥cios
        AppService,
        {
            // üõ°Ô∏è Define um guardi√£o global de autentica√ß√£o usando JWT
            provide: APP_GUARD,
            useClass: JwtAuthGuard,
        },
    ],
})
export class AppModule {}
